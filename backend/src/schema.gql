# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type User {
  id_user: String!
  user_name: String!
  email: String!
  password: String!
  phone: String
  avatar: String
  status: String
  role: String!
  create_at: DateTime
  update_at: DateTime
  delete_at: DateTime
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type UserPagination {
  data: [User!]
  totalCount: Int
  totalPage: Int
}

type Location {
  location_id: String!
  location_name: String!
}

type Address {
  address_id: Int!
  full_name: String!
  phone: String!
  address: String!
  id_user: String!
  is_default: Boolean
  create_at: DateTime
  update_at: DateTime
  delete_at: DateTime
}

type AddressPagination {
  data: [Address!]!
  totalCount: Int!
  totalPage: Int!
}

type AddressByUserId {
  address: [Address!]
}

type ShopAddress {
  address_id: Int!
  shop_id: String!
  address: String!
  phone: String!
  is_default: Boolean
}

type Category {
  category_id: Int!
  category_name: String!
  create_at: DateTime
  update_at: DateTime
}

type CategoryPagination {
  data: [Category!]!
  totalCount: Int!
  totalPage: Int!
}

type ProductDetail {
  product_detail_id: Int!
  description: String
  specifications: String
  create_at: DateTime
  update_at: DateTime
}

type PaginatedProductDetails {
  items: [ProductDetail!]!
  totalCount: Int!
  page: Int!
  limit: Int!
  totalPages: Int!
}

type ProductImage {
  image_id: Int!
  product_id: Int!
  image_url: String!
  is_thumbnail: Boolean
  create_at: DateTime
}

type ProductVariation {
  product_variation_id: Int!
  product_variation_name: String!
  base_price: Float!
  percent_discount: Float!
  stock_quantity: Int!
  status: String!
  product_id: Int!
  create_at: DateTime
  update_at: DateTime
}

type Voucher {
  id: Int!
  code: String!
  discount_percent: Float!
  minimum_require_price: Float!
  max_discount_price: Float!
  quantity: Int!
  max_use_per_user: Int
  valid_from: DateTime
  valid_to: DateTime
  create_at: DateTime
  delete_at: DateTime
}

type ShopVoucher {
  id: Int!
  code: String!
  discount_percent: Float!
  minimum_require_price: Float!
  max_discount_price: Float!
  quantity: Int!
  max_use_per_user: Int
  valid_from: DateTime
  valid_to: DateTime
  create_at: DateTime
  delete_at: DateTime
  shop_id: String!
  shop: Shop
}

type Shop {
  shop_id: String!
  id_user: String!
  shop_name: String!
  link: String
  status: Shop_status!
  location_id: String!
  create_at: DateTime
  update_at: DateTime
  delete_at: DateTime
  shop_addresses: [ShopAddress!]
  location: Location
  shop_vouchers: [ShopVoucher!]
  user: User!
  products: [Product!]
}

"""Trạng thái của cửa hàng"""
enum Shop_status {
  active
  inactive
  banned
}

type Product {
  product_id: Int!
  product_name: String!
  brand: String!
  status: Product_status!
  category: Category!
  product_detail_id: Int!
  shop_id: String!
  shop: Shop
  product_detail: ProductDetail!
  product_images: [ProductImage!]
  product_variations: [ProductVariation!]!
}

"""Trạng thái của sản phẩm"""
enum Product_status {
  active
  inactive
  out_of_stock
}

type ProductPagination {
  data: [Product!]!
  totalCount: Int!
  totalPage: Int!
}

type CreateProduct {
  product_id: Int!
  product_name: String!
  brand: String!
  status: Product_status!
  category_id: Int!
  product_detail_id: Int!
  shop_id: String!
}

type PaginatedProductVariations {
  data: [ProductVariation!]!
  totalCount: Int!
  totalPages: Int!
}

type ShopPagination {
  data: [Shop!]!
  totalCount: Int!
  totalPage: Int!
}

type ShopVoucherPagination {
  totalCount: Int
  totalPage: Int
  data: [ShopVoucher!]!
}

type VoucherPagination {
  totalCount: Int
  totalPage: Int
  data: [Voucher!]!
}

type DashboardStat {
  """Example field (placeholder)"""
  exampleField: Int!
}

type SellerDashboardStats {
  """Tổng doanh thu"""
  totalRevenue: Float!

  """Số lượng đơn hàng"""
  orderCount: Int!

  """Số lượng sản phẩm"""
  productCount: Int!

  """Điểm đánh giá trung bình"""
  averageRating: Float!

  """Doanh thu theo tháng"""
  monthlyRevenue: [MonthlyRevenue!]

  """Số lượng sản phẩm theo trạng thái"""
  productStatusCount: [ProductStatus!]
}

type MonthlyRevenue {
  """Tháng (MM/YYYY)"""
  month: String!

  """Doanh thu"""
  revenue: Float!
}

type ProductStatus {
  """Trạng thái sản phẩm"""
  status: String!

  """Số lượng"""
  count: Int!
}

type Invoice {
  invoice_id: String!
  payment_method: String
  payment_status: String
  order_status: String!
  total_amount: Float!
  shipping_fee: Float!
  id_user: String!
  cart_id: String!
  shop_id: String!
  user: User
  shop: Shop
  create_at: DateTime
  update_at: DateTime
}

type ProductVariationOrder {
  product_variation_name: String!
  base_price: Float!
  percent_discount: Float!
  status: String!
  product_name: String!
  shop_id: String!
  shop_name: String!
  image_url: String
  quantity: Float!
}

type ShippingAddress {
  address: String
  phone: String
}

type InvoiceDetail {
  invoice_id: String!
  payment_method: String
  payment_status: String
  order_status: String!
  total_amount: Float!
  shipping_fee: Float!
  user_name: String!
  address: String
  phone: String
  create_at: DateTime
  user: User
  shipping_address: ShippingAddress
  products: [ProductVariationOrder!]
  invoice_products: [InvoiceProduct!]
}

type ProductVariationDetail {
  product: ProductDetail
  product_images: [ProductImage!]
}

type InvoiceProduct {
  invoice_product_id: Int!
  product_name: String!
  variation_name: String!
  price: Float!
  quantity: Int!
  discount_percent: Float!
  discount_amount: Float
  product_variation_id: Int!
  product_variation: ProductVariationDetail
}

type InvoicePagination {
  data: [Invoice!]!
  totalCount: Float!
  totalPage: Float!
}

type OrderStats {
  waiting_for_delivery: Int!
  processed: Int!
  delivery: Int!
  delivered: Int!
  canceled: Int!
}

type RevenueByMonth {
  month: String!
  revenue: Float!
}

type TopSellingProduct {
  product_id: Int!
  product_name: String!
  total_quantity: Int!
  total_revenue: Float!
  product: Product!
}

type TopShop {
  shop_id: String!
  shop_name: String!
  total_revenue: Float!
  total_orders: Int!
  total_products: Int!
  shop: Shop!
}

type RecentOrder {
  invoice_id: String!
  order_status: String!
  total_amount: Float!
  user: User!
  shop: Shop!
}

type AdminDashboardStats {
  totalRevenue: Float!
  totalOrders: Int!
  totalProducts: Int!
  totalShops: Int!
  totalUsers: Int!
  orderStats: OrderStats!
  revenueByMonth: [RevenueByMonth!]!
  topSellingProducts: [TopSellingProduct!]!
  topShops: [TopShop!]!
  recentOrders: [RecentOrder!]!
}

type CartProduct {
  cart_product_id: Int!
  cart_id: String!
  product_variation_id: Int!
  quantity: Int!
  create_at: DateTime
  update_at: DateTime
  is_selected: Boolean!
  product_variation: ProductVariation!
  product: Product
}

type Cart {
  cart_id: String!
  id_user: String!
  status: Cart_status!
  create_at: DateTime
  update_at: DateTime
  cart_products: [CartProduct!]!
}

"""Trạng thái của giỏ hàng"""
enum Cart_status {
  active
  checkout
  abandoned
}

type VoucherStorage {
  voucher_storage_id: Int!
  user_id: String!
  voucher_id: String!
  voucher_type: Voucher_type!
  claimed_at: DateTime
  voucher: Voucher
  shop_voucher: ShopVoucher
}

"""Loại voucher"""
enum Voucher_type {
  voucher
  shop_voucher
}

type RemoveExpiredVouchersResponse {
  count: Int!
  message: String!
}

type Query {
  users(pagination: PaginationInput!): UserPagination!
  user(id: String!): User!
  locations: [Location!]!
  location(location_id: String!): Location!
  addressByUserId(id: String!): AddressByUserId!
  addresss(addresss: PaginationInput!): AddressPagination!
  address(id: Int!): Address!
  shopAddresss: [ShopAddress!]!
  shopAddress(id: Int!): ShopAddress!
  categorys(pagination: PaginationInput!): CategoryPagination!
  category(id: Int!): Category!
  productDetails(pagination: PaginationInput): PaginatedProductDetails!
  productDetail(id: Int!): ProductDetail!
  products(pagination: PaginationInput!): ProductPagination!
  getProductsByShopId(id: String!, pagination: PaginationInput): ProductPagination!
  product(id: Int!): Product!
  productBySlug(slug: String!): Product!
  productImages: [ProductImage!]!
  productImage(id: Int!): ProductImage!
  productImagesByProductId(productId: Int!): [ProductImage!]!
  productVariations(pagination: PaginationInput): PaginatedProductVariations!
  productVariationsByProductId(productId: Int!, pagination: PaginationInput): PaginatedProductVariations!
  productVariation(id: Int!): ProductVariation!
  shops(pagination: PaginationInput!): ShopPagination!
  shop(id: String!): Shop!
  getShopIdByUserId(id: String!): Shop!
  shopVouchers(paginationInput: PaginationInput!): ShopVoucherPagination!
  getShopVouchersByShopId(shopId: String!, paginationInput: PaginationInput!): ShopVoucherPagination!
  shopVoucher(id: Int!): ShopVoucher!
  vouchers(paginationInput: PaginationInput!): VoucherPagination!
  voucher(id: Int!): Voucher!
  dashboardStats: [DashboardStat!]!
  dashboardStat(id: Int!): DashboardStat!
  getSellerDashboardStats(shopId: String!): SellerDashboardStats!
  getInvoicesByShop(getInvoicesByShopInput: GetInvoicesByShopInput!): InvoicePagination!
  getInvoiceDetail(invoice_id: String!): InvoiceDetail!
  getOutOfStockProducts(getOutOfStockProductsInput: GetOutOfStockProductsInput!): InvoicePagination!
  getAllInvoices(getAllInvoicesInput: GetAllInvoicesInput!): InvoicePagination!
  getAdminDashboardStats: AdminDashboardStats!
  getcart(id: String!): Cart!
  getCartProducts(cart_id: String!): [CartProduct!]!
  cartProduct(id: Int!): CartProduct!
  getUserVouchersByUserId(userId: String!): [VoucherStorage!]!
  getUserVouchersForCheckout(userId: String!, shopId: String!): [VoucherStorage!]!
  voucherStorage(id: Int!): VoucherStorage!
}

input PaginationInput {
  page: Int = 1
  limit: Int = 10
  search: String
}

input GetInvoicesByShopInput {
  shop_id: String!
  order_status: String
  page: Int! = 1
  limit: Int! = 10
}

input GetOutOfStockProductsInput {
  shop_id: String!
  page: Int! = 1
  limit: Int! = 10
}

input GetAllInvoicesInput {
  order_status: String
  page: Int! = 1
  limit: Int! = 10
  search: String
}

type Mutation {
  updateUser(updateUserInput: UpdateUserInput!): User!
  createLocation(createLocationInput: CreateLocationInput!): Location!
  updateLocation(updateLocationInput: UpdateLocationInput!): Location!
  removeLocation(location_id: String!): Location!
  createAddress(createAddressInput: CreateAddressInput!): Address!
  updateAddress(updateAddressInput: UpdateAddressInput!): Address!
  removeAddress(id: Int!): Address!
  createShopAddress(createShopAddressInput: CreateShopAddressInput!): ShopAddress!
  updateShopAddress(updateShopAddressInput: UpdateShopAddressInput!): ShopAddress!
  removeShopAddress(id: Int!): ShopAddress!
  setDefaultShopAddress(id: Int!): ShopAddress!
  createCategory(createCategoryInput: CreateCategoryInput!): Category!
  updateCategory(updateCategoryInput: UpdateCategoryInput!): Category!
  removeCategory(id: Int!): Category!
  createProductDetail(createProductDetailInput: CreateProductDetailInput!): ProductDetail!
  updateProductDetail(updateProductDetailInput: UpdateProductDetailInput!): ProductDetail!
  removeProductDetail(id: Int!): ProductDetail!
  createProduct(createProductInput: CreateProductInput!): CreateProduct!
  updateProduct(shopid: String!, updateProductInput: UpdateProductInput!): Product!
  removeProduct(id: Int!): Product!
  createProductImage(createProductImageInput: CreateProductImageInput!): ProductImage!
  updateProductImage(updateProductImageInput: UpdateProductImageInput!): ProductImage!
  removeProductImage(id: Int!): ProductImage!
  createProductVariation(createProductVariationInput: CreateProductVariationInput!): ProductVariation!
  updateProductVariation(updateProductVariationInput: UpdateProductVariationInput!): ProductVariation!
  removeProductVariation(id: Int!): ProductVariation!
  createShop(createShopInput: CreateShopInput!): Shop!
  updateShop(updateShopInput: UpdateShopInput!): Shop!
  removeShop(id: Int!): Shop!
  createShopVoucher(createShopVoucherInput: CreateShopVoucherInput!): ShopVoucher!
  updateShopVoucher(updateShopVoucherInput: UpdateShopVoucherInput!): ShopVoucher!
  removeShopVoucher(id: Int!): ShopVoucher!
  createVoucher(createVoucherInput: CreateVoucherInput!): Voucher!
  updateVoucher(updateVoucherInput: UpdateVoucherInput!): Voucher!
  removeVoucher(id: Int!): Voucher!
  createDashboardStat(createDashboardStatInput: CreateDashboardStatInput!): DashboardStat!
  updateDashboardStat(updateDashboardStatInput: UpdateDashboardStatInput!): DashboardStat!
  removeDashboardStat(id: Int!): DashboardStat!
  createInvoice(createInvoiceInput: CreateInvoiceInput!): Invoice!
  updateInvoiceStatus(updateInvoiceStatusInput: UpdateInvoiceStatusInput!): Invoice!
  createCart(createCartInput: CreateCartInput!): Cart!
  updateCart(updateCartInput: UpdateCartInput!): Cart!
  removeCart(id: Int!): Cart!
  addProductToCart(addProductToCartInput: CreateCartProductInput!): CartProduct!
  updateCartProduct(updateCartProductInput: UpdateCartProductInput!): CartProduct!
  removeCartProduct(cartproductid: Int!, productvariationid: Int!): CartProduct!
  createVoucherStorage(createVoucherStorageInput: CreateVoucherStorageInput!): VoucherStorage!
  updateVoucherStorage(updateVoucherStorageInput: UpdateVoucherStorageInput!): VoucherStorage!
  removeVoucherStorage(id: Int!): VoucherStorage!
  removeExpiredVouchers(userId: String!): RemoveExpiredVouchersResponse!
}

input UpdateUserInput {
  user_name: String
  email: String
  password: String
  role: String
  phone: String
  avatar: String
  id: String!
}

input CreateLocationInput {
  location_id: String!
  location_name: String!
}

input UpdateLocationInput {
  location_id: String!
  location_name: String!
}

input CreateAddressInput {
  full_name: String!
  address_name: String!
  phone: String!
  address: String!
  id_user: String!
  is_default: Boolean
}

input UpdateAddressInput {
  full_name: String!
  address_name: String
  phone: String!
  address: String!
  id_user: String
  is_default: Boolean
  address_id: Int!
}

input CreateShopAddressInput {
  address: String!
  shop_id: String!
  phone: String!
  is_default: Boolean = false
}

input UpdateShopAddressInput {
  address_id: Int!
  address: String!
  phone: String!
  shop_id: String
  is_default: Boolean
}

input CreateCategoryInput {
  category_name: String!
}

input UpdateCategoryInput {
  category_id: Int!
  category_name: String!
}

input CreateProductDetailInput {
  description: String!
  specifications: String!
}

input UpdateProductDetailInput {
  description: String
  specifications: String
  product_detail_id: Int!
}

input CreateProductInput {
  product_name: String!
  brand: String!
  status: String!
  category_id: Int!
  product_detail_id: Int!
  shop_id: String!
}

input UpdateProductInput {
  product_id: Int!
  product_name: String
  brand: String
  status: String
  category_id: Int
  product_detail_id: Int
}

input CreateProductImageInput {
  product_id: Int!
  image_url: String!
  is_thumbnail: Boolean = false
}

input UpdateProductImageInput {
  product_id: Int
  image_url: String
  is_thumbnail: Boolean = false
  image_id: Int!
}

input CreateProductVariationInput {
  product_variation_name: String!
  base_price: Float!
  percent_discount: Float!
  stock_quantity: Int!
  status: String!
  product_id: Int!
}

input UpdateProductVariationInput {
  product_variation_name: String
  base_price: Float
  percent_discount: Float
  stock_quantity: Int
  status: String
  product_id: Int
  product_variation_id: Int!
}

input CreateShopInput {
  """Example field (placeholder)"""
  exampleField: Int!
}

input UpdateShopInput {
  """Example field (placeholder)"""
  exampleField: Int
  id: Int!
}

input CreateShopVoucherInput {
  code: String!
  shop_id: String!
  discount_percent: Float!
  minimum_require_price: Float!
  max_discount_price: Float!
  quantity: Int!
  max_use_per_user: Int
  valid_from: DateTime
  valid_to: DateTime
}

input UpdateShopVoucherInput {
  code: String
  shop_id: String
  discount_percent: Float!
  minimum_require_price: Float!
  max_discount_price: Float!
  quantity: Int!
  max_use_per_user: Int!
  valid_from: DateTime!
  valid_to: DateTime!
  id: Int!
}

input CreateVoucherInput {
  code: String!
  discount_percent: Float!
  minimum_require_price: Float!
  max_discount_price: Float!
  quantity: Int!
  max_use_per_user: Int
  valid_from: DateTime
  valid_to: DateTime
}

input UpdateVoucherInput {
  code: String
  discount_percent: Float!
  minimum_require_price: Float!
  max_discount_price: Float!
  quantity: Int!
  max_use_per_user: Int!
  valid_from: DateTime!
  valid_to: DateTime!
  id: Int!
}

input CreateDashboardStatInput {
  """Example field (placeholder)"""
  exampleField: Int!
}

input UpdateDashboardStatInput {
  """Example field (placeholder)"""
  exampleField: Int
  id: Int!
}

input CreateInvoiceInput {
  user_id: String!
  shop_id: String!
  payment_method: String!
  shipping_address_id: Int
  products: [InvoiceProductInput!]!
  total_amount: Float!
  shipping_fee: Float!
  voucher_storage_id: Int
}

input InvoiceProductInput {
  product_variation_id: Int!
  product_name: String!
  variation_name: String!
  price: Float!
  original_price: Float
  quantity: Int!
  discount_percent: Float
  discount_amount: Float
}

input UpdateInvoiceStatusInput {
  invoice_id: String!
  order_status: String!
}

input CreateCartInput {
  cart_id: String!
  id_user: String!
  status: Cart_status!
}

input UpdateCartInput {
  cart_id: String
  id_user: String
  status: Cart_status
  id: Int!
}

input CreateCartProductInput {
  cart_id: String!
  product_variation_id: Int!
  quantity: Int! = 1
  is_selected: Boolean! = false
}

input UpdateCartProductInput {
  cart_id: String
  product_variation_id: Int
  quantity: Int = 1
  is_selected: Boolean = false
  id: Int!
}

input CreateVoucherStorageInput {
  """Example field (placeholder)"""
  exampleField: Int!
}

input UpdateVoucherStorageInput {
  """Example field (placeholder)"""
  exampleField: Int
  id: Int!
}